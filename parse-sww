#!/usr/bin/env ruby
# coding: utf-8
# frozen_string_literal: true

# Copyright (C) 2019 Jonathan Riddell <sitter@kde.org>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public
# License as published by the Free Software Foundation; either
# version 2 of the License, or (at your option) version 3, or any
# later version accepted by the membership of KDE e.V. (or its
# successor approved by the membership of KDE e.V.), which shall
# act as a proxy defined in Section 6 of version 3 of the license.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU General Public
# License along with this library.  If not, see <http://www.gnu.org/licenses/>.

require 'optparse'
require_relative 'lib/appstream-metainfo-release-update'

@date = "today"
@releases_to_show = 0
@dateoff = false # double negative but I can't work out a nicer way

parser = OptionParser.new do |opts|
  opts.banner = <<-EOS
Usage: appstream-metainfo-release-update 'org.foo.metainfo.xml'
  EOS
  opts.on("-v", "--version VERSION",
          "version to add e.g. 1.0") do |vers|
    @version = vers
  end
  opts.on("-d", "--datestring DATE_STRING",
          "date to use 'today' 'next Thursday' '2018-01-01' etc") do |date_string|
    @date = date_string || "today"
  end
  opts.on("-o", "--dateoff",
          "do not include a date") do |date_off|
    @dateoff = date_off
  end
  opts.on("-r", "--releases_to_show RELEASES_TO_SHOW",
          "how many releases to include in file (default infinite)") do |releases_to_show|
    @releases_to_show = releases_to_show.to_i || 0
  end
end
parser.parse!

abort parser.help if ARGV.empty?
file_name = ARGV[0]

updater = MetaInfoUpdater.new(file_name, @version, @date, @dateoff, @releases_to_show)
updater.open_file
updater.save_file
